# Common configuration.

AllCops:
  Exclude:
    - 'db/**/*'
    - 'node_modules/**/*'
    - 'vendor/**/*'
    - '.git/**/*'

#################### Layout ###########################

Layout/ClassStructure:
  Description: 'Enforces a configured order of definitions within a class body.'
  Enabled: true

Layout/EndOfLine:
  Description: 'Use Unix-style line endings.'
  Enabled: true
  # The `native` style means that CR+LF (Carriage Return + Line Feed) is
  # enforced on Windows, and LF is enforced on other platforms. The other styles
  # mean LF and CR+LF, respectively.
  EnforcedStyle: crlf

#################### Metrics ###############################

Metrics/AbcSize:
  Description: >-
                 A calculated magnitude based on number of assignments,
                 branches, and conditions.
  Enabled: true
  Max: 16.5


Metrics/LineLength:
  Description: 'Limit lines to 100 characters.'
  Enabled: true
  Max: 100
  # The IgnoreCopDirectives option causes the LineLength rule to ignore cop
  # directives like '# rubocop: enable ...' when calculating a line's length.
  IgnoreCopDirectives: true

Metrics/MethodLength:
  Description: 'Avoid methods longer than 15 lines of code.'
  Enabled: true
  Max: 15

#################### Performance ###########################

Performance/CaseWhenSplat:
  Description: >-
                 Reordering `when` conditions with a splat to the end
                 of the `when` branches can improve performance.
  Enabled: true
  AutoCorrect: true
  SafeAutoCorrect: true

Performance/Casecmp:
  Description: >-
             Use `casecmp` rather than `downcase ==`, `upcase ==`, `== downcase`, or `== upcase`..
  Reference: 'https://github.com/JuanitoFatas/fast-ruby#stringcasecmp-vs-stringdowncase---code'
  Enabled: true
  VersionAdded: '0.36'

Performance/ChainArrayAllocation:
  Description: >-
                  Instead of chaining array methods that allocate new arrays, mutate an
                  existing array.
  Enabled: true

Performance/DoubleStartEndWith:
  Description: >-
                  Use `str.{start,end}_with?(x, ..., y, ...)`
                  instead of `str.{start,end}_with?(x, ...) || str.{start,end}_with?(y, ...)`.
  Enabled: true
  # Used to check for `starts_with?` and `ends_with?`.
  # These methods are defined by `ActiveSupport`.
  IncludeActiveSupportAliases: true

#################### Rails #################################

# By default, the rails cops are not run. Override in project or home
# directory .rubocop.yml files, or by giving the -R/--rails option.
Rails:
  Enabled: true

Rails/CreateTableWithTimestamps:
  Description: >-
                  Checks the migration for which timestamps are not included
                  when creating a new table.
  Enabled: false

Rails/SafeNavigation:
  Description: "Use Ruby's safe navigation operator (`&.`) instead of `try!`"
  Enabled: true
  # This will convert usages of `try` to use safe navigation as well as `try!`.
  # `try` and `try!` work slightly differently. `try!` and safe navigation will
  # both raise a `NoMethodError` if the receiver of the method call does not
  # implement the intended method. `try` will not raise an exception for this.
  ConvertTry: true

Rails/SaveBang:
  Description: 'Identifies possible cases where Active Record save! or related should be used.'
  Enabled: true

#################### Style ###############################

Style/AutoResourceCleanup:
  Description: 'Suggests the usage of an auto resource cleanup version of a method (if available).'
  Enabled: true

Style/ImplicitRuntimeError:
  Description: >-
                 Use `raise` or `fail` with an explicit exception class and
                 message, rather than just a message.
  Enabled: true

Style/StringLiterals:
  Description: 'Checks if uses of quotes match the configured preference.'
  Enabled: true
  EnforcedStyle: single_quotes
  # If `true`, strings which span multiple lines using `\` for continuation must
  # use the same type of quotes on each line.
  ConsistentQuotesInMultiline: true